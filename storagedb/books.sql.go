// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: books.sql

package storagedb

import (
	"context"
	"database/sql"
)

const getBookById = `-- name: GetBookById :one
SELECT
    book_id, title, author, price, description, author_bio
FROM
    books
WHERE
    book_id = $1
`

func (q *Queries) GetBookById(ctx context.Context, bookID int32) (Book, error) {
	row := q.db.QueryRowContext(ctx, getBookById, bookID)
	var i Book
	err := row.Scan(
		&i.BookID,
		&i.Title,
		&i.Author,
		&i.Price,
		&i.Description,
		&i.AuthorBio,
	)
	return i, err
}

const insertBook = `-- name: InsertBook :one
INSERT INTO
    books(title, author, price, description, author_bio)
VALUES
    (
        $1,
        $2,
        $3,
        $4,
        $5
    ) RETURNING book_id
`

type InsertBookParams struct {
	Title       string
	Author      string
	Price       sql.NullFloat64
	Description sql.NullString
	AuthorBio   sql.NullString
}

func (q *Queries) InsertBook(ctx context.Context, arg InsertBookParams) (int32, error) {
	row := q.db.QueryRowContext(ctx, insertBook,
		arg.Title,
		arg.Author,
		arg.Price,
		arg.Description,
		arg.AuthorBio,
	)
	var book_id int32
	err := row.Scan(&book_id)
	return book_id, err
}
